# -*- coding: utf-8 -*-
"""Python 102 - Assignment 12

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1m3OiU3D0LvGv0CL85duyShUuw_IG6h4l
"""

#@title Datetime Module Exploration
import datetime
#do not consider this line
import time

cmd_list = dir(datetime)
cmd_list2 = []
for cmd in cmd_list:
  if '_' not in cmd:
    if cmd[0] != "M":
      cmd_list2.append(cmd)
cmd_list2.pop()
cmd_list2.pop()
cmd_list2.pop()

print("Exploring Datetime Module")
while True:
  print()
  x = 1
  for v in cmd_list2:
    print(x, v)
    x = x + 1
  print("5 Exit")
  del x
  learn = int(input("\nWhich method would you like to learn about? "))
  if learn == 1:
    print("\ndatetime.date takes integers and gives a simple iteration of the date in YYYY-MM-DD format.")
    print("datetime.date(2023, 12, 24) --> ", datetime.date(2023, 12, 24))
    time.sleep(3)
    print("\nThere are parameters when it comes to entering the month and day.\nHowever, you need to make sure you are entering something tangible for the year.")
    print("datetime.date(5, 9, 6) --> ", datetime.date(5, 9, 6))
    time.sleep(3)
    print("\nOr that happens...")
  if learn == 2:
    print("\ndatetime.datetime takes integers and returns the date plus the time down to the microsecond")
    print("datetime.datetime(2000, 5, 31, 4, 56, 27, 67) --> ", datetime.datetime(2000, 5, 31, 4, 56, 27, 67))
    time.sleep(3)
    print("\nAs long as the date makes sense, the time can be anything you want!")
    print("datetime.datetime(2000, 5, 31, 23, 12, 9, 83) --> ", datetime.datetime(2000, 5, 31, 23, 12, 9, 83))
  if learn == 3:
    print("Note: When I was trying to test this method, it broke to where I couldn't access it. Please ignore this.")
  if learn == 4:
    print("\ndatetime.time is similar to datetime.datetime, except it doesn't have any parameters for dates")
    print("datetime.time(4, 56, 27, 67) --> ", datetime.time(4, 56, 27, 67))
    continue
  if learn == 5:
    break